deploymentAnnotations: {}
imagePullSecret: 
containerImage: 
  image: some/image
  tag: latest
  imagePullPolicy: IfNotPresent
  
persistence:
  dataDir:
    enabled: true
    Size: 1Gi
#    existingClaim: 
    mountPath: /data

spec:
  strategy: 
    type: Recreate

podAnnotations: {}

resources:
  requests:
    memory: 512Mi
    cpu: 500m


readinessProbe: {}
#  failureThreshold: 3
#  periodSeconds: 10
#  successThreshold: 1
#  tcpSocket:
#    port: 7878
#  timeoutSeconds: 1

livenessProbe: {}
#  exec:
#    command:
#    - /usr/bin/env
#    - bash
#    - -c
#    - curl --fail localhost:7878/api/v3/system/status?apiKey=`IFS=\> && while
#      read -d \< E C; do if [[ $E = "ApiKey" ]]; then echo $C; fi; done <
#      /config/config.xml`
#  failureThreshold: 5
#  initialDelaySeconds: 60
#  periodSeconds: 10
#  successThreshold: 1
#  timeoutSeconds: 10
  
startupProbe: {}
#  failureThreshold: 30
#  periodSeconds: 5
#  successThreshold: 1
#  tcpSocket:
#    port: 7878
#  timeoutSeconds: 1
  
container:
  port: 7878
  protocol: TCP

# extraVolumes:
#   - volumeMounts:
#       - name: nfs
#         mountPath: /mnt/volume
#         readOnly: true
#     volumes:
#       - name: nfs
#         server: some.nfs.server.com
#         path: /
#         mountOptions:
#           - port=2049
#           - hard
#           - vers=4
extraVolumes: []

# Service
service:
  serviceAnnotations: {}
  # ClusterIP, NodePort
  serviceType: ClusterIP
  #nodePort: 30000
  #externalTrafficPolicy: Cluster
  #internalTrafficPolicy: Cluster
    
ingress:
  enabled: true
  className: ""
  annotations: {}
  hosts:
    - host: radarr.domain.xyz
      paths:
        - path: /
          pathType: Prefix

  tls:
    - hosts:
        - radarr.domain.xyz
      secretName: certificate-production
